('3.1', '<')
('3.3', '\\times')
('3.3', '\\times')
('3.3', '\\times')
('3.3', '\\times')
('3.3', '\\times')
('3.3', '\\times')
('3.4.2', '\\displaystyle L=-\\sum_{i=1}^{N}\\left(L_{1}+L_{2}\\right)')
('3.4.2', '\\displaystyle L')
('3.4.2', '\\displaystyle=-\\sum_{i=1}^{N}\\left(L_{1}+L_{2}\\right)')
('3.4.2', '\\displaystyle L_{1}=\\log\\frac{e^{s_{ii}}}{\\sum_{j}e^{s_{ij}}}')
('3.4.2', '\\displaystyle L_{1}')
('3.4.2', '\\displaystyle=\\log\\frac{e^{s_{ii}}}{\\sum_{j}e^{s_{ij}}}')
('3.4.2', '\\displaystyle L_{2}=\\lambda\\cdot\\left[\\max(0,m-M_{ij})\\right]^{2}')
('3.4.2', '\\displaystyle L_{2}')
('3.4.2', '\\displaystyle=\\lambda\\cdot\\left[\\max(0,m-M_{ij})\\right]^{2}')
('3.4.2', '\\displaystyle M_{ij}=\\min_{j\\neq i}s_{ij}')
('3.4.2', '\\displaystyle M_{ij}')
('3.4.2', '\\displaystyle=\\min_{j\\neq i}s_{ij}')
('3.5', '\\text{Cosine Sim}(\\mathbf{A},\\mathbf{B})=\\frac{\\sum_{i=1}^{n}A_{i}\\times B_{i}%\n}{\\sqrt{\\sum_{i=1}^{n}A_{i}^{2}}\\times\\sqrt{\\sum_{i=1}^{n}B_{i}^{2}}}')
('3.5', '\\mathbf{A}')
('3.5', '\\mathbf{B}')
('3.5', 'n')
('3.5', 'A_{i}')
('3.5', 'B_{i}')
('3.5', '\\mathbf{A}')
('3.5', '\\mathbf{B}')
('3.5', 'k')
('3.6', '\\text{P}=\\frac{\\text{Number of relevant images retrieved}}{\\text{Total number %\nof images retrieved}}')
('3.6', '\\text{R}=\\frac{\\text{Number of relevant images retrieved}}{\\text{Total number %\nof relevant images}}')
('3.6.1', '\\text{MAP}=\\frac{1}{Q}\\sum_{q=1}^{Q}\\left(\\frac{1}{m_{q}}\\sum_{k=1}^{m_{q}}%\n\\text{Precision}_{k}\\right)')
('3.6.1', 'Q')
('3.6.1', 'm_{q}')
('3.6.1', 'q')
('3.6.1', '\\text{Precision}_{k}')
('3.6.1', 'k')
('3.6.2', '\\text{MAR}=\\frac{1}{Q}\\sum_{q=1}^{Q}\\left(\\frac{1}{m_{q}}\\sum_{k=1}^{m_{q}}%\n\\text{Recall}_{k}\\right)')
('3.6.2', 'Q')
('3.6.2', 'm_{q}')
('3.6.2', 'q')
('3.6.2', '\\text{Recall}_{k}')
('3.6.2', 'k')
('3.6.3', '\\text{MAF1}=\\frac{1}{Q}\\sum_{q=1}^{Q}\\left(F1_{q}\\right)')
('3.6.3', 'Q')
('3.6.3', 'F1_{q}')
('3.6.3', 'q')
('3.6.3', 'F1_{q}=2\\cdot\\frac{\\text{Precision}_{q}\\cdot\\text{Recall}_{q}}{\\text{Precision%\n}_{q}+\\text{Recall}_{q}}')
('3.6.4', 'k')
('3.6.4', 'k')
('3.6.4', '\\text{Mean Avg Top-}k\\text{-Accuracy}=\\begin{aligned} &\\frac{1}{Q}\\sum_{q=1}^{%\nQ}\\left(\\text{Accuracy}_{q}^{(k)}\\right)\\end{aligned}')
('3.6.4', 'Q')
('3.6.4', '\\text{Accuracy}_{q}^{(k)}')
('3.6.4', 'k')
('3.6.4', 'q')
('3.6.4', '\\text{Accuracy}_{q}^{(k)}=\\begin{cases}1&\\text{if correct answer is in top }k,%\n\\\\\n0&\\text{otherwise.}\\end{cases}')
('6', 'df,img\\_dir,tokenizer,transform')
('6', 'df,img\\_dir,tokenizer,transform')
('6', 'self.dataframe\\leftarrow dataframe')
('6', 'self.img\\_dir\\leftarrow img\\_dir')
('6', 'self.tokenizer\\leftarrow tokenizer')
('6', 'self.transform\\leftarrow transform')
('6', 'encoder\\_type\\leftarrow type')
('6', "encoder\\_type=\\text{'resnet50'}")
('6', "encoder\\_type=\\text{'efficientnet'}")
('6', "encoder\\_type=\\text{'vit'}")
('6', "encoder\\_type=\\text{'swin\\_transformer'}")
('6', "encoder\\_type=\\text{'convnext'}")
('6', 'train\\_loader,model,optimizer,scheduler')
('6', 'images,input\\_ids,attention\\_masks')
