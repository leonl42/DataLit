('2', '{L_{0},L_{1},...,L_{m}}')
('2', 'W_{j}^{\\prime}')
('2', 'W_{j}')
('2', 'L_{j}')
('2', 'E=\\frac{E_{c}}{|E_{c}|}\\;,\\;\\;\\;E_{c}=\\mathbin{\\|}_{j=0}^{m}{(W_{j}^{\\prime}-W%\n_{j})/|W_{j}^{\\prime}-W_{j}|}')
('2', '\\mathbin{\\|}')
('2', '\\mathbin{\\|}_{j=1}^{m}{a_{j}}')
('2', 'a_{0}')
('2', 'a_{1}')
('2', 'a_{m}')
('2', '768')
('2', '768*3=2304')
('2', 'L_{0}=cls.predictions.transform.LayerNorm.weight')
('2', 'L_{1}=cls.predictions.transform.LayerNorm.bias')
('2', 'L_{2}=cls.predictions.transform.dense.bias')
('2', 'P')
('2', '(k,m)')
('2', 'P=k+m')
('2', 'k')
('2', 'm')
('2', 'k+m-1')
('2', '[(k_{1},m_{1}),...,(k_{n},m_{n})]')
('2', '[(2,1),(1,1),(1,2),(1,3)]')
('3.1', '0.05,0.10,0.15,...,0.95')
('3.1', '0.1,0.3,0.5,0.7,0.9')
('3.2', 'B')
('3.2', 'C')
('3.2', 'A')
('3.2', 'B')
('3.2', 'A')
('3.2', 'B')
('3.2', 'A')
('3.2', 'C')
('3.2', 'A')
('3.2', 'sim(A,B)>sim(A,C)\\iff(E_{A}*E_{B})>(E_{A}*E_{C})')
('3.2', 'sim')
('3.2', 'sim(A,B)>sim(A,C)')
('3.2', '(A,B,C)')
('3.2', 'A')
('3.2', 'B')
('3.2', 'C')
('3.2', '(E_{A}*E_{B})>(E_{A}*E_{C})')
('3.2', 'A')
('3.2', 'B')
('3.2', 'C')
('3.2', 'wrong=44')
('3.2', '10')
('3.2', 'ABC')
('3.2', 'ABC')
('3.2', 'total')
('3.2', 'wrong')
('3.2', 'error=wrong/total')
('3.2', 'I')
('3.2', 'Neural')
('3.2', 'AB')
('3.2', 'AC')
('3.2', 'ABC')
('3.2', 'ABC')
('3.2', 'total')
('3.2', 'wrong')
('3.2', 'error=wrong/total')
('3.2', 'I')
('3.2', 'Neural')
('3.2', 'AB')
('3.2', 'AC')
('3.2', 'I')
('3.2', 'ABC')
('3.2', 'ABC')
('3.2', 'I')
('3.2', '[(2,1),(1,1),(1,2),(1,3)]')
('3.2', '(A,B,C)')
('3.2', 'I')
('3.2', 'I=\\frac{T_{emb}\\bigcap{T_{neural}}}{min(|T_{emb}|,|T_{neural}|)}')
('3.2', 'I')
('3.2', 'T_{emb}')
('3.2', 'T_{neural}')
('3.2', '1')
('3.2', '(E_{A}*E_{B})')
('3.2', '(E_{A}*E_{C})')
('3.2', 'I')
('3.2', '50\\%')
('3.3', 'sim(A,B)>sim(C,D)\\iff(E_{A}*E_{B})>(E_{C}*E_{D})')
('3.3', 'total')
('3.3', 'wrong')
('3.3', 'error=wrong/total')
('3.3', 'total')
('3.3', 'wrong')
('3.3', 'error=wrong/total')
('3.3', 'I')
('4.0.x1', 'M')
('4.0.x1', '\\{W_{j}\\}')
('4.0.x1', '\\{L_{j}\\}')
('4.0.x1', 'M')
('4.0.x1', 'T')
('4.0.x1', 'T=T_{0}+T_{1}+...')
('4.0.x1', 'T_{i}')
('4.0.x1', 'M')
('4.0.x1', '\\{L_{j}\\}')
('4.0.x1', '\\{W_{j}\\}')
('4.0.x1', 'inputs\\_and\\_labels')
('4.0.x1', 'T_{i}')
('4.0.x1', 'inputs\\_and\\_labels')
('4.0.x1', 'M')
('4.0.x1', 'inputs\\_and\\_labels')
('4.0.x1', '\\{W^{\\prime}_{j}\\}')
('4.0.x1', '\\{L_{j}\\}')
('4.0.x1', 'dW_{j}=W_{j}^{\\prime}-W_{j}')
('4.0.x1', 'E_{c}=\\mathbin{\\|}_{j=1}^{m}{dW_{j}^{\\prime}/|dW_{j}|}')
('4.0.x1', 'E={E_{c}}/{|E_{c}|}')
('4.0.x1', 'E')
('4.0.x1', 'T')
('4.0.x1', '\\{L_{j}\\}')
('4.0.x1', '\\mathbin{\\|}')
('4.0.x1', '\\mathbin{\\|}_{j=1}^{m}{a_{j}}')
('4.0.x1', 'a_{0}')
('4.0.x1', 'a_{1}')
('4.0.x1', 'a_{m}')
('4.0.x1', 'T')
('4.0.x1', '\\{L_{j}\\}')
('4.0.x1', '\\mathbin{\\|}')
('4.0.x1', '\\mathbin{\\|}_{j=1}^{m}{a_{j}}')
('4.0.x1', 'a_{0}')
('4.0.x1', 'a_{1}')
('4.0.x1', 'a_{m}')
('4.0.x1', '[(2,1),(1,1),(1,2),(1,3)]')
('4.0.x1', '[(2,1),(1,1),(1,2),(1,3)]')
('4.0.x1', 'L_{0}=cls.predictions.transform.LayerNorm.weight')
('4.0.x1', 'L_{1}=cls.predictions.transform.LayerNorm.bias')
('4.0.x1', 'L_{2}=cls.predictions.transform.dense.bias')
('4.0.x1', 'L_{0}=bert.encoder.layer.11.output.LayerNorm.weight')
('4.0.x1', 'L_{1}=bert.encoder.layer.11.output.LayerNorm.bias')
('4.0.x1', 'L_{2}=bert.encoder.layer.11.output.dense.bias')
('4.0.x1', '[(2,1),(1,1),(1,2),(1,3)]')
('4.0.x1', '[(k_{1},m_{1}),...,(k_{n},m_{n})]')
('4.0.x1', 'T=[t_{0},t_{1},...]')
('4.0.x1', 'inputs\\_and\\_labels')
('4.0.x1', '(k_{i},m_{i})')
('4.0.x1', 'P=k_{i}+m_{i}')
('4.0.x1', 'S_{max}=\\min(P,len(T))')
('4.0.x1', 's')
('4.0.x1', 'S_{max}')
('4.0.x1', 'I')
('4.0.x1', 'T')
('4.0.x1', 'L')
('4.0.x1', 'len(L)=len(T)')
('4.0.x1', 'j')
('4.0.x1', 'len(T)')
('4.0.x1', 'R=(j-s)\\%P')
('4.0.x1', 'R>=k_{i}')
('4.0.x1', 'L[j]=I[j]')
('4.0.x1', 'I[j]=mask')
('4.0.x1', '(I,L)')
('4.0.x1', 'inputs\\_and\\_labels')
('4.0.x1', 'inputs\\_and\\_labels')
('4.0.x1', 'len(T)')
('4.0.x1', 'len(T)')
('A3.1', 'L_{0}=cls.predictions.transform.LayerNorm.weight')
('A3.1', 'L_{1}=cls.predictions.transform.LayerNorm.bias')
('A3.1', 'L_{2}=cls.predictions.transform.dense.bias')
('A3.2', '[(2,1),(1,1),(1,2),(1,3)]')
('A3.2', '0.1,0.3,0.5,0.7,0.9')
('A3.2', '5\\times 5=25')
('A3.2', '25\\times 3=75')
('A3.2', '75')
('A3.2', '0.05,0.10,0.15,...,0.95')
('A3.2', '0.05')
('A3.2', '0.05,0.10,0.15,...,0.95')
('A3.2', 'L_{0}=bert.encoder.layer.11.output.LayerNorm.weight')
('A3.2', 'L_{1}=bert.encoder.layer.11.output.LayerNorm.bias')
('A3.2', 'L_{2}=bert.encoder.layer.11.output.dense.bias')
('A3.2', 'I')
('A3.2', 'I')
