('3.3', 'n')
('3.3', '\\label{eq:n-gram}\n\\text{ngm}(UDN, SDN) = \\frac{{\\sum_{n=1}^{\\min(j, k)} \\left| n\\text{-gram}(UDN) \\cap n\\text{-gram}(SDN) \\right|}}{{\\min(j, k)}},')
('3.3', 'j')
('3.3', 'k')
('3.3', 'n')
('3.3', 'n')
('3.3', '\\label{eq:cosine_similarity}\n% \\text{{similarity}}(UDN, SDN) = \\frac{{\\text{{BERT}}(UDN) \\cdot \\text{{BERT}}(SDN)}}{{\\|\\text{{BERT}}(UDN)\\| \\|\\text{{BERT}}(SDN)\\|}}\n\\text{{similarity}}(UDN, SDN) = \\text{{cosine}}(\\text{{BERT}}(UDN), \\text{{BERT}}(SDN)).')
('3.3', 'n')
('3.3', '\\label{eq:overall_semantic_filtering}\n\\begin{aligned}\n\\text{{Final Dataset}} = \\{(GeneratedPairs) | & \\text{{ngm}}(UDN, SDN) > \\alpha \\\\\n& \\land \\text{{similarity}}(UDN, SDN) > \\beta\\}.\n\\end{aligned}')
('3.3', '\\alpha')
('3.3', '\\beta')
('3.3', 'n')
('3.3', '\\alpha')
('3.3', '\\beta')
('4.1', '\\label{eq:f1}\nP = \\frac{k}{n}, R = \\frac{k}{m}, F1 = \\frac{2 \\times P \\times R}{P + R},')
('4.1', 'm')
('4.1', 'n')
('4.1', 'k')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('9', '\\rightarrow')
('10', 'training\\_set')
('10', 'ICD\\_list')
('10', 'augmented\\_pairs')
('10', 'augmented\\_pairs \\gets []')
('10', 'A1 \\gets NER(d1)')
('10', 'A2 \\gets NER(s1)')
('10', 'SA, DiA1, DiA2 \\gets comparing\\_axis\\_words(A1, A2)')
('10', 'd2 \\gets d1.replace\\_axis(DiA1[0], DiA2[0])')
('10', 'augmented\\_pairs.append((d2, s1))')
('10', 'augmented\\_pairs')
('10', 'training\\_set')
('10', 'ICD\\_list')
('10', 'augmented\\_pairs')
('10', 'augmented\\_pairs \\gets []')
('10', 'A1 \\gets NER(u1)')
('10', 'A2 \\gets NER(s1)')
('10', 'A3 \\gets NER(s2)')
('10', 'SA, DiA1, DiA2 \\gets comparing\\_axis\\_words(A2, A3)')
('10', 's3 \\gets s1.replace\\_axis(DiA1[0], DiA2[0])')
('10', 'u2 \\gets u1.replace\\_axis(DiA1[0], DiA2[0])')
('10', 'augmented\\_pairs.append((u2, s3))')
('10', 'augmented\\_pairs')
('10', 'training\\_set')
('10', 'ICD\\_list')
('10', 'augmented\\_pairs')
('10', 'augmented\\_pairs \\gets []')
('10', 'code_6 =')
('10', '(d1)')
('10', 'code_4 = code_6[0:3]')
('10', 's1 =')
('10', '(code_4)')
('10', 'augmented\\_pairs.append((d1, s1))')
('10', 'augmented\\_pairs')
('10', 'training\\_set')
('10', 'ICD\\_list')
('10', 'augmented\\_pairs')
('10', 'augmented\\_pairs \\gets []')
('10', 'A1 \\gets NER(d1)')
('10', 'A2 \\gets NER(s1)')
('10', 'SA, DiA1, DiA2 \\gets comparing\\_axis\\_words(A1, A2)')
('10', 'augmented\\_pairs.append((d1, s1))')
('10', 'augmented\\_pairs')
