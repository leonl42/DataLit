('3', '\\langle {\\mathcal{S}}, {\\mathcal{A}}, {\\mathcal{T}}, \\rho(s_0), T, p(g)\\rangle')
('3', 'p(g)')
('3', 'g \\in {\\mathcal{S}}')
('3', 'p(g)')
('3', '\\pi(\\cdot | s, g)')
('3', '{\\mathcal{S}}\\times {\\mathcal{S}}\\to \\Delta({\\mathcal{A}})')
('3', '\\Delta({\\mathcal{A}})')
('3', '\\epsilon')
('3', '\\pi \\leftarrow \\arg\\max_{\\pi} J(\\pi) = \\mathbb{E}_{g \\sim p(g)} \\left[P_{\\pi_g}\\left(s_T = g\\right) \\right].')
('3', 'r_g(s) = \\mathbbm{1}(s = g)')
('3', '{\\pi \\leftarrow \\arg\\max_\\pi \\mathbb{E}_{\\tau \\sim \\pi(\\cdot|s, g), g \\sim p(g)}\\left[\\sum_{t=1}^H \\gamma^t r_g(s_t) \\right]}')
('3.0', 'g')
('3.0', 's_T')
('3.0', "(s, a, s', g, r_g(s))")
('3.0', "(s, a, s', g', r_{g'}(s))")
('3.0', "g'")
('3.0', "g'")
('3.0', 's')
('3.0', 'r_s(s) = 1')
('3.0', 'g = s')
('3.0', 'p(g)')
('3.0', "p(g')")
('3.0', 'p(g)')
('3.0', "g'")
('3.0', 'g')
('4.0', '\\mathcal{F}')
('4.0', 'g_b')
('4.0', '\\mathcal{F}')
('4.0', 'g_b')
('4.0', 'g_b')
('4.1', 's_1')
('4.1', 's_2')
('4.1', 'g')
('4.1', 'f_\\theta(s, g)')
('4.1', '\\label{eq:learngoalselector}\n\\begin{split}\n    \\max_\\theta \\sum &\\mathbbm{1}(s_1 > s_2 | g)\\log \\frac{\\exp{f_\\theta(s_1, g)}}{\\exp{f_\\theta(s_1, g)} + \\exp{f_\\theta(s_2, g)}} + \\\\ &(1 - \\mathbbm{1}(s_1 > s_2 | g))\\log \\frac{\\exp{f_\\theta(s_2, g)}}{\\exp{f_\\theta(s_1, g)} + \\exp{f_\\theta(s_2, g)}}\n\\end{split}')
('4.1', 's')
('4.1', 'g')
('4.1', 'f_\\theta(s, g)')
('4.1', 'g_b')
('4.1', '\\exp(-f_\\theta(s, g))')
('4.1', 'f')
('4.1', "g_b \\sim p(g_b|g); p(g_b|g) =  \\frac{\\exp{-\\alpha f_\\theta(g_b, g)}}{\\sum_{g' \\in \\mathcal{D}} \\exp{-\\alpha f_\\theta(g', g)}}\\refstepcounter{equation}(\\theequation)\\label{eq:sample_breadcrumb}")
('4.1', '\\mathcal{D}')
('4.1', '\\alpha')
('4.1', '\\alpha')
('4.1', '\\alpha')
('4.2', '\\tau = \\{s_0, a_0, s_1, s_2, \\dots, s_T, a_T\\}_{i=1}^N')
('4.2', '\\mathcal{D}_{\\tau} = \\{(s_t, a_t, g = s_{t+h}, h): t, h > 0, t+h \\leq T\\}\n\\refstepcounter{equation}(\\theequation)\\label{eq:hindsightrelabelling}')
('4.2', 'J_{\\text{Policy}}(\\pi) = \\mathbb{E}_{\\tau \\sim \\mathbb{E}_g[\\pi_{\\text{old}}(\\cdot|g)]}\\left[\\sum_{t=0}^T \\log \\pi(a_t|s_t, \\mathcal{G}(\\tau))\\right]\n\\refstepcounter{equation}(\\theequation)\\label{eq:policylearning}')
('4.2.0', '\\pi')
('4.2.0', 'f_\\theta(s, g)')
('4.2.0', 'f_\\theta(s, g)')
('4.2.0', '\\tau')
('4.2.0', '\\frac{n(n+1)}{2}')
('4.2.0', '\\{s_{t_1} < s_{t_2} : t_1 < t_2 \\forall s_{t_1}, s_{t_2} \\in \\tau\\}')
('9.0', '\\phi(s_1, s_2)')
('9.0', 's_2')
('9.0', 's_1')
('9.0', 't_{\\text{close}}')
('9.0', '\\phi')
('9.0', 'l(s_i, s_j) = 1')
('9.0', '|i - j| \\leq t_{\\text{close}}')
('9.0', '0')
('9.0', '|i - j| \\geq t_{\\text{far}}')
('9.0', 't_{\\text{close}}')
('9.1', '64 \\times 64')
('9.1', '(x, y)')
('9.1', '64 \\times 64')
('9.1', 'r')
('9.1', 'r')
('9.1', '12')
('10', '50')
('10', '20')
('11', '(x, y)')
('11', '9')
('11', '8')
('11', '(x, y)')
('11', '9')
('11', '\\label{eq:distancepusher}\n            r = \n            max(distance\\_puck\\_finger, 0.05) + distance\\_puck\\_goal')
('11', '\\hspace*{-3.5cm}\n        r = \\begin{cases}\n            - \\text{distance(arm, hinge cabinet)} - |\\text{hinge cabinet target joint - hinge cabinet current joint} |  \\text{ , if slide cabinet and microwave opened} \\\\\n            - \\text{distance(arm, microwave hinge)}- |\\text{microwave target joint - microwave current joint} |- \\text{bonus}  \\text{ , if slide cabinet opened} \\\\\n            - \\text{distance(arm, slide cabinet hinge)} - |\\text{slide cabinet target joint - slide cabinet current joint}| -  2\\text{bonus}  \\text{ , otherwise}\\\\\n        \\end{cases}')
('11', '2')
('11', '\\hspace*{-1.5cm}\n        r = \\begin{cases}\n            - \\text{distance(arm, blue block) - distance(blue block, target goal)}\\text{ , if red and green block at position}\\\\\n            - \\text{distance(arm, green block) - distance(green block, target goal)} - \\text{bonus} \\text{ , if red block at position}\\\\\n            - \\text{distance(arm, red block) - distance(red block, target goal)} - 2\\text{bonus}\\text{ , otherwise}\\\\\n        \\end{cases}')
('11', '2')
('11', '\\hspace*{-3cm}\n        r = \\begin{cases}\n            - \\text{distance(arm, yellow star) - distance(yellow star, target yellow star)}\\text{ , if all except star at position}\\\\\n            - \\text{distance(arm, green block) - distance(blue green block, target green block)} -  \\text{bonus} \\text{ , if red and blue blocks at position}\\\\\n            - \\text{distance(arm, blue triangle) - distance(blue triangle, target blue triangle)} -  2\\text{bonus} \\text{ , if red cylinder at position}\\\\\n            - \\text{distance(arm, red cylinder) - distance(red cylinder, target red cylinder)} -3 \\text{bonus} \\text{ , otherwise}\\\\\n        \\end{cases}')
('12.0', '-r')
('12.0', 'r')
('12.0', '\\mathbf{0.02 \\pm 0.01}')
('12.0', '\\mathbf{0.02 \\pm 0.00}')
('12.0', '1.15 \\pm 0.67')
('12.0', '0.48 \\pm 0.39')
('12.0', '0.45 \\pm 0.28')
('12.0', '1.45 \\pm 0.13')
('12.0', '\\mathbf{0.05 \\pm 0.02}')
('12.0', '0.13 \\pm 0.18')
('12.0', '\\mathbf{0.4 \\pm 0.3}')
('12.0', '\\mathbf{0.8 \\pm 0.3}')
('12.0', '29.6 \\pm 2.2')
('12.0', '18.5 \\pm 5.6')
('12.0', '8.54 \\pm 10.6')
('12.0', '30.4 \\pm 0.7')
('12.0', '\\mathbf{0.0 \\pm 0.2}')
('12.0', '\\mathbf{0.06 \\pm 0.00}')
('12.0', '\\mathbf{0.11 \\pm 0.04}')
('12.0', '0.85 \\pm 0.11')
('12.0', '0.26 \\pm 0.03')
('12.0', '0.69 \\pm 0.06')
('12.0', '0.72 \\pm 0.06')
('12.0', '0.27 \\pm 0.00')
('12.0', '\\mathbf{1.06 \\pm 0.32}')
('12.0', '\\mathbf{0.67 \\pm 0.21}')
('12.0', '11.72 \\pm 0.11')
('12.0', '3.43 \\pm 4.37')
('12.0', '11.28 \\pm 0.02')
('12.0', '7.63 \\pm 4.96')
('12.0', '2.84 \\pm 2.72')
('12.0', '\\mathbf{0.1 \\pm 0.2}')
('12.0', '\\mathbf{0.0 \\pm 0.0}')
('12.0', '4.1 \\pm 2.3')
('12.0', '6.5 \\pm 0.1')
('12.0', '6.6 \\pm 0.1')
('12.0', '6.7 \\pm 0.0')
('12.0', '6.6 \\pm 0.0')
('12.0', '1.00 \\pm 0.53')
('12.0', '\\mathbf{0.36 \\pm 0.73}')
('12.0', '12.87 \\pm 0.01')
('12.0', '12.54 \\pm 0.01')
('12.0', '12.63 \\pm 0.21')
('12.0', '12.75 \\pm 0.01')
('12.0', '12.75 \\pm 0.01')
('12.0', '0.45 \\pm 0.46')
('12.0', '0.04 \\pm 0.00')
('12.0', '2.25 \\pm 1.51')
('12.0', '0.87 \\pm 1.02')
('12.0', '0.25 \\pm 0.09')
('12.0', '0.08 \\pm 0.01')
('12.0', '11.38 \\pm 0.00')
('12.0', '0.87 \\pm 1.02')
('12.0', '1.91 \\pm 1.02')
('12.0', '0.01 \\pm 0.00')
('12.0', '4.21 \\pm 5.47')
('12.0', '1.87 \\pm 0.4')
('13.0.0.1', '1.6')
('13.0.0.2', '0.5')
('13.0.0.2', 'd \\geq 0.5')
('13.1.0', 'd')
('13.1.0', '1.6')
('13.1.0', 'd')
('13.2', '< 0.05')
('14.0', 'g_b')
('14.2', '40')
('14.3', '\\gamma')
('14.3', '0.99')
('14.3', '256,256')
('14.3', '1000')
('14.3', '1000')
('14.3', '5 \\cdot 10^{-4}')
('14.3', '100')
('14.3', '400, 600, 600, 300')
('14.3', '5000')
('14.3', '1000')
('14.3', '5')
('14.3', '1000')
('14.3', '5 \\cdot 10^{-4}')
('14.3', '100')
('14.3', '256, 64')
('14.3', '5000')
('14.3', '1000')
('14.3', '5')
('14.3', '1000')
('14.3', '5 \\cdot 10^{-4}')
('14.3', '256')
('14.3', '2 \\cdot 10^4')
('14.3', '256, 256')
('14.3', '1000')
('14.3', '8192')
('14.3', '400, 600, 600, 300')
