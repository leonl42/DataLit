('3.0', '(A)')
('3.0', '(Q)')
('3.0', '(I)')
('3.0', '(TR)')
('3.0', '(VR)')
('3.0', 'TR')
('3.0', 'TR')
('3.1.0', '(Action)')
('3.1.0', '(VR)')
('3.1.0', '(TR)')
('3.1.0', '(MR)')
('3.1.0', '(SG)')
('3.1.0', 'Action')
('3.1.0', 'Action')
('3.1.0', 'VR')
('3.1.0', 'VR')
('3.1.0', 'TR')
('3.1.0', 'MR')
('3.1.1', 'MR')
('3.1.1', '(MRS)')
('3.1.1', 'MRS')
('3.1.2', 'Q')
('3.1.2', 'I')
('3.1.2', 'A')
('3.1.2', 'MRS')
('3.1.2', 'Q')
('3.1.2', 'SG')
('3.1.2', 'Action')
('3.1.2', 'VR')
('3.1.2', 'TR')
('3.1.2', 'MR')
('3.1.2', '\\langle SG, VR, TR \\rangle')
('3.1.2', 'Q')
('3.1.2', 'I')
('3.1.2', 'A')
('3.1.2', 'MRS')
('3.1.2', 'MRS \\leftarrow []')
('3.1.2', '\\{SG_1, SG_2, \\ldots, SG_n\\} \\leftarrow \\text{MLLM.auto\\_design}(Q)')
('3.1.2', 'Action_i \\leftarrow \\text{MLLM.select\\_action}(SG_i)')
('3.1.2', 'VR_i \\leftarrow \\text{execute}(Action_i, I)')
('3.1.2', 'TR_i \\leftarrow \\text{MLLM.generate\\_text\\_rationale}(SG_i)')
('3.1.2', 'MR_i \\leftarrow \\langle SG_i, VR_i, TR_i \\rangle')
('3.1.2', 'MRS \\leftarrow MRS \\cup MR_i')
('3.1.2', 'MRS \\leftarrow \\text{MLLM.concat\\_rationales}(\\{MR_1, MR_2, \\ldots, MR_n\\})')
('3.1.2', 'A \\leftarrow \\text{MLLM.refine\\_answer}(Q, MRS)')
('3.1.2', '\\langle A, MRS \\rangle')
