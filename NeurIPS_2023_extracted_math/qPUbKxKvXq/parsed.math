('2', 'L_\\theta')
('2', 'V')
('2', 'x_1, \\ldots, x_n')
('2', 'x_{n+1}')
('2', 'x_1, \\ldots, x_n')
('2', 'p')
('2', '\\varphi')
('2', 'A_\\varphi')
('2', '\\varphi')
('2', '\\varphi')
('2', 'C')
('2', 'M_\\varphi')
('2', '\\varphi')
('2', '(A_\\varphi, s_0, S, \\mathtt{pre}, \\mathtt{update}, \\mathtt{maskgen})')
('2', 's_0')
('2', '\\mathtt{pre}')
('2', 'A_\\varphi')
('2', 'A_\\varphi')
('2', 'x_{n+1}')
('2', 'S')
('2', "s,s' \\in S")
('2', 'x_{n+1}')
('2', '\\mathtt{update}(s, x_{n+1})')
('2', "s'")
('2', 'x_{n+1}')
('2', 's_0')
('2', '\\mathtt{maskgen}')
('2', 'x_{n+1}')
('2', 'V')
('2', '\\ell')
('2', 'M_\\varphi')
('2', '\\varphi')
('2', 'L_\\theta')
('2', 'M_\\varphi')
('2', 'L_\\theta \\vert \\vert M_\\varphi')
('2', 'x_1, \\ldots, x_n')
('2', 'C')
('2', 'p')
('2', 's')
('2', 's_0')
('2', 'x_{n+1}')
('2', '\\ell')
('2', 'm')
('2', '\\oplus')
('2', 'm[x] = 0')
('2', '\\ell[x]')
('2', '-K')
('2', '\\mathtt{maskgen}')
('2', 's')
('2', '\\mathtt{pre}(s; x_1, \\ldots, x_n)')
('2', "s'")
('2', 'A_\\varphi')
('2', '\\mathtt{update}')
('2', "\\begin{aligned}\n    \\!\\!(L_\\theta \\vert \\vert M_\\varphi)(x_{n+1} \\vert x_1, \\ldots, x_n; C, p, s) & = \n        \\left \\{\\! \n        \\begin{array}{@{}ll@{}} \n        \\mathtt{softmax}(\\ell)[x_{n+1}] & \\text{if } s = s_0 \\text{ is the wait state}\\\\\n        \\mathtt{softmax}(\\ell \\oplus m)[x_{n+1}] & \\text{otherwise}\n        \\end{array} \\right .\\\\\n    \\ell & = L_\\theta( \\;\\cdot\\; \\vert x_1, \\ldots, x_n; p)\\\\\n    m & = \\mathtt{maskgen}(s, V)\\\\\n    s' & = \\left \\{\\!\\!\\!\\!\n    \\begin{array}{ll}\n    A_\\varphi(x_1, \\ldots, x_n; C) & \\text{if } s \\!=\\! s_0 \\wedge \\mathtt{pre}(s; x_1, \\ldots, x_n)\\\\\n    \\mathtt{update}(s, x_{n+1}) & \\text{otherwise}\n    \\end{array} \\right .\n\\end{aligned}")
('2', '\\mathtt{pre}')
('2', '\\mathtt{update}')
('2', '\\mathtt{maskgen}')
('2', 'A_\\varphi')
('2', 'T')
('2', 'T')
('2', 'T')
('2', 'T')
('2', 'T')
('2', 'M_\\varphi')
('2', 'x_1, \\ldots, x_n')
('2', '\\mathtt{pre}')
('2', 'A_\\varphi')
('2', 'A_\\varphi')
('2', 'T')
('2', 'T')
('2', 'A_\\varphi')
('2', 's')
('2', 'V')
('2', '\\mathtt{maskgen}')
('2', 'V')
('2', 's')
('2', 'V')
('2', 'm')
('2', 't \\in V')
('2', 's')
('2', 'm[t]')
('2', '1')
('2', 'E')
('2', 'w')
('2', 's')
('2', '\\Sigma')
('2', 't \\in V')
('2', 'w \\cdot E \\cdot \\Sigma^*')
('2', 'm[t]')
('2', '1')
('2', 't')
('2', 'V')
('2', 'm[t]')
('2', '0')
('2', 'x_{n+1}')
('2', 'x_{n+1}')
('2', 'E')
('2', 'A_\\varphi')
('2', 'x_{n+1}')
('2', 's')
('2', '\\mathtt{update}')
('2', 's')
('2', 'x_{n+1}')
('2', 'x_{n+1}')
('2', 'x_{n+1}')
('2', "s'")
('2', 'A_\\varphi')
('3', 'n=6')
('3', 'k \\in [1,n]')
('3', 'score@k')
('3', 'pass@k,n')
('3', 'k')
('3', 'k')
('4.0', 'k \\in [1,6]')
('4.0', 'k \\ge 4')
('4.0', 'k=1')
('4.0', 'k=4')
('4.0', 'k=1')
('10', 'M_\\varphi')
('10', 's_0')
('10', 'x_1, x_2, ..., x_n')
('10', 'M_\\varphi')
('10', 'pre(s_0, x_1, ..., x_n)')
('10', 'x_n =')
('10', '.')
('10', 'pre(s_0, x_1, ..., x_n)')
('10', 'true')
('10', 'A_\\varphi')
('10', '\\varphi')
('10', 'A_\\varphi')
('10', 'M_\\varphi')
('10', 's_1')
('10', 'M_\\varphi')
('10', 'm = maskgen(s_1, V)')
('10', 'L_\\theta')
('10', '\\ell')
('10', '\\ell')
('10', 'L_\\theta')
('10', 'm')
('10', '\\ell \\oplus m')
('10', 'update(s_1, \\texttt{with})')
('10', 's_2')
('10', 'L_\\theta')
('10', 'L_\\theta')
('10', 'M_\\varphi')
('10', '\\texttt{Ip}')
('10', 's_2')
('10', 'update(s_2, \\texttt{Ip})')
('10', 's_3')
('10', 's_3 = \\{\\epsilon\\}')
('10', 's_3')
('10', 'w \\cdot E \\cdot \\Sigma^*')
('10', 'w = \\epsilon')
('10', 's_0')
('11', '\\geq2')
('11', '\\geq7')
('12', 'A_\\varphi')
('12', 'M_\\varphi')
('13', 'S=\\{s_1, s_2, ..., s_n\\}')
('13', 'S')
('13', 'S_{\\geq}=(s_{1}^\\geq, s_{2}^\\geq, ..., s_{n}^\\geq)')
('13', 'score@k,n')
('13', 'score@k,n = \\frac{1}{\\binom{n}{k}} \\sum_{i=1}^{n-k+1} \\binom{n-i}{k-1} S_{\\geq}[i] = \\frac{1}{\\binom{n}{k}} \\sum_{T \\in \\binom{S}{k}} \\max(T)')
('13', '\\binom{S}{k} = \\{V | V \\subseteq S, |V|=k\\}')
('13', '1 \\leq k \\leq n')
('13', '\\binom{S}{k}')
('13', 'S')
('13', 'k')
